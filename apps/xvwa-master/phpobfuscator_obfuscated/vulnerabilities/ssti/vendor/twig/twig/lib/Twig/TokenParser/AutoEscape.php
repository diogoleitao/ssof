<?php
class Twig_TokenParser_AutoEscape extends Twig_TokenParser { public function parse(Twig_Token $sp650e38) { $sp1f599c = $sp650e38->getLine(); $sp8ec2ac = $this->parser->getStream(); if ($sp8ec2ac->test(Twig_Token::BLOCK_END_TYPE)) { $spbb4d96 = 'html'; } else { $sp005e3e = $this->parser->getExpressionParser()->parseExpression(); if (!$sp005e3e instanceof Twig_Node_Expression_Constant) { throw new Twig_Error_Syntax('An escaping strategy must be a string or a Boolean.', $sp8ec2ac->getCurrent()->getLine(), $sp8ec2ac->getFilename()); } $spbb4d96 = $sp005e3e->getAttribute('value'); $spfa25dc = true === $spbb4d96 || false === $spbb4d96; if (true === $spbb4d96) { $spbb4d96 = 'html'; } if ($spfa25dc && $sp8ec2ac->test(Twig_Token::NAME_TYPE)) { if (false === $spbb4d96) { throw new Twig_Error_Syntax('Unexpected escaping strategy as you set autoescaping to false.', $sp8ec2ac->getCurrent()->getLine(), $sp8ec2ac->getFilename()); } $spbb4d96 = $sp8ec2ac->next()->getValue(); } } $sp8ec2ac->expect(Twig_Token::BLOCK_END_TYPE); $sp1965de = $this->parser->subparse(array($this, 'decideBlockEnd'), true); $sp8ec2ac->expect(Twig_Token::BLOCK_END_TYPE); return new Twig_Node_AutoEscape($spbb4d96, $sp1965de, $sp1f599c, $this->getTag()); } public function decideBlockEnd(Twig_Token $sp650e38) { return $sp650e38->test('endautoescape'); } public function getTag() { return 'autoescape'; } }