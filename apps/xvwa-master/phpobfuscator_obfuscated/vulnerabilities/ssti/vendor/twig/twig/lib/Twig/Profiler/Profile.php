<?php
class Twig_Profiler_Profile implements IteratorAggregate, Serializable { const ROOT = 'ROOT'; const BLOCK = 'block'; const TEMPLATE = 'template'; const MACRO = 'macro'; private $template; private $name; private $type; private $starts = array(); private $ends = array(); private $profiles = array(); public function __construct($spe32893 = 'main', $sp32ff7e = self::ROOT, $sp3eec35 = 'main') { $this->template = $spe32893; $this->type = $sp32ff7e; $this->name = 0 === strpos($sp3eec35, '__internal_') ? 'INTERNAL' : $sp3eec35; $this->enter(); } public function getTemplate() { return $this->template; } public function getType() { return $this->type; } public function getName() { return $this->name; } public function isRoot() { return self::ROOT === $this->type; } public function isTemplate() { return self::TEMPLATE === $this->type; } public function isBlock() { return self::BLOCK === $this->type; } public function isMacro() { return self::MACRO === $this->type; } public function getProfiles() { return $this->profiles; } public function addProfile(Twig_Profiler_Profile $sp6e7f73) { $this->profiles[] = $sp6e7f73; } public function getDuration() { return isset($this->ends['wt']) && isset($this->starts['wt']) ? $this->ends['wt'] - $this->starts['wt'] : 0; } public function getMemoryUsage() { return isset($this->ends['mu']) && isset($this->starts['mu']) ? $this->ends['mu'] - $this->starts['mu'] : 0; } public function getPeakMemoryUsage() { return isset($this->ends['pmu']) && isset($this->starts['pmu']) ? $this->ends['pmu'] - $this->starts['pmu'] : 0; } public function enter() { $this->starts = array('wt' => microtime(true), 'mu' => memory_get_usage(), 'pmu' => memory_get_peak_usage()); } public function leave() { $this->ends = array('wt' => microtime(true), 'mu' => memory_get_usage(), 'pmu' => memory_get_peak_usage()); } public function getIterator() { return new ArrayIterator($this->profiles); } public function serialize() { return serialize(array($this->template, $this->name, $this->type, $this->starts, $this->ends, $this->profiles)); } public function unserialize($sp1c9c90) { list($this->template, $this->name, $this->type, $this->starts, $this->ends, $this->profiles) = unserialize($sp1c9c90); } }