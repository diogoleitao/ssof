<?php
abstract class Twig_Test_IntegrationTestCase extends PHPUnit_Framework_TestCase { protected abstract function getExtensions(); protected abstract function getFixturesDir(); public function testIntegration($spc15032, $sp9f2d02, $sp53778f, $sp34ff74, $spbd276e, $sp666d50) { $this->doIntegrationTest($spc15032, $sp9f2d02, $sp53778f, $sp34ff74, $spbd276e, $sp666d50); } public function getTests() { $spd70fc9 = realpath($this->getFixturesDir()); $sp754928 = array(); foreach (new RecursiveIteratorIterator(new RecursiveDirectoryIterator($spd70fc9), RecursiveIteratorIterator::LEAVES_ONLY) as $spc15032) { if (!preg_match('/\\.test$/', $spc15032)) { continue; } $sp26d1b4 = file_get_contents($spc15032->getRealpath()); if (preg_match('/
                    --TEST--\\s*(.*?)\\s*(?:--CONDITION--\\s*(.*))?\\s*((?:--TEMPLATE(?:\\(.*?\\))?--(?:.*?))+)\\s*(?:--DATA--\\s*(.*))?\\s*--EXCEPTION--\\s*(.*)/sx', $sp26d1b4, $sp3832c1)) { $sp9f2d02 = $sp3832c1[1]; $sp53778f = $sp3832c1[2]; $sp34ff74 = $this->parseTemplates($sp3832c1[3]); $spbd276e = $sp3832c1[5]; $sp666d50 = array(array(null, $sp3832c1[4], null, '')); } elseif (preg_match('/--TEST--\\s*(.*?)\\s*(?:--CONDITION--\\s*(.*))?\\s*((?:--TEMPLATE(?:\\(.*?\\))?--(?:.*?))+)--DATA--.*?--EXPECT--.*/s', $sp26d1b4, $sp3832c1)) { $sp9f2d02 = $sp3832c1[1]; $sp53778f = $sp3832c1[2]; $sp34ff74 = $this->parseTemplates($sp3832c1[3]); $spbd276e = false; preg_match_all('/--DATA--(.*?)(?:--CONFIG--(.*?))?--EXPECT--(.*?)(?=\\-\\-DATA\\-\\-|$)/s', $sp26d1b4, $sp666d50, PREG_SET_ORDER); } else { throw new InvalidArgumentException(sprintf('Test "%s" is not valid.', str_replace($spd70fc9 . '/', '', $spc15032))); } $sp754928[] = array(str_replace($spd70fc9 . '/', '', $spc15032), $sp9f2d02, $sp53778f, $sp34ff74, $spbd276e, $sp666d50); } return $sp754928; } protected function doIntegrationTest($spc15032, $sp9f2d02, $sp53778f, $sp34ff74, $spbd276e, $sp666d50) { if ($sp53778f) { eval('$ret = ' . $sp53778f . ';'); if (!$sp575a78) { $this->markTestSkipped($sp53778f); } } $spdfb5a9 = new Twig_Loader_Array($sp34ff74); foreach ($sp666d50 as $spc83c7f => $sp3832c1) { $spb2161d = array_merge(array('cache' => false, 'strict_variables' => true), $sp3832c1[2] ? eval($sp3832c1[2] . ';') : array()); $speae043 = new Twig_Environment($spdfb5a9, $spb2161d); $speae043->addGlobal('global', 'global'); foreach ($this->getExtensions() as $spd24372) { $speae043->addExtension($spd24372); } if (PHP_VERSION_ID >= 50300) { $spbcfac7 = new ReflectionProperty($speae043, 'templateClassPrefix'); $spbcfac7->setAccessible(true); $spbcfac7->setValue($speae043, '__TwigTemplate_' . hash('sha256', uniqid(mt_rand(), true), false) . '_'); } try { $spe32893 = $speae043->loadTemplate('index.twig'); } catch (Exception $spbcee8e) { if (false !== $spbd276e) { $this->assertEquals(trim($spbd276e), trim(sprintf('%s: %s', get_class($spbcee8e), $spbcee8e->getMessage()))); return; } if ($spbcee8e instanceof Twig_Error_Syntax) { $spbcee8e->setTemplateFile($spc15032); throw $spbcee8e; } throw new Twig_Error(sprintf('%s: %s', get_class($spbcee8e), $spbcee8e->getMessage()), -1, $spc15032, $spbcee8e); } try { $sp35fa7e = trim($spe32893->render(eval($sp3832c1[1] . ';')), '
 '); } catch (Exception $spbcee8e) { if (false !== $spbd276e) { $this->assertEquals(trim($spbd276e), trim(sprintf('%s: %s', get_class($spbcee8e), $spbcee8e->getMessage()))); return; } if ($spbcee8e instanceof Twig_Error_Syntax) { $spbcee8e->setTemplateFile($spc15032); } else { $spbcee8e = new Twig_Error(sprintf('%s: %s', get_class($spbcee8e), $spbcee8e->getMessage()), -1, $spc15032, $spbcee8e); } $sp35fa7e = trim(sprintf('%s: %s', get_class($spbcee8e), $spbcee8e->getMessage())); } if (false !== $spbd276e) { list($spbd0159) = explode(':', $spbd276e); $this->assertThat(null, new PHPUnit_Framework_Constraint_Exception($spbd0159)); } $spc4a4e4 = trim($sp3832c1[3], '
 '); if ($spc4a4e4 != $sp35fa7e) { printf('Compiled templates that failed on case %d:
', $spc83c7f + 1); foreach (array_keys($sp34ff74) as $sp3eec35) { echo "Template: {$sp3eec35}\n"; $sp5d0098 = $spdfb5a9->getSource($sp3eec35); echo $speae043->compile($speae043->parse($speae043->tokenize($sp5d0098, $sp3eec35))); } } $this->assertEquals($spc4a4e4, $sp35fa7e, $sp9f2d02 . ' (in ' . $spc15032 . ')'); } } protected static function parseTemplates($sp26d1b4) { $sp34ff74 = array(); preg_match_all('/--TEMPLATE(?:\\((.*?)\\))?--(.*?)(?=\\-\\-TEMPLATE|$)/s', $sp26d1b4, $sp0b25b7, PREG_SET_ORDER); foreach ($sp0b25b7 as $sp3832c1) { $sp34ff74[$sp3832c1[1] ? $sp3832c1[1] : 'index.twig'] = $sp3832c1[2]; } return $sp34ff74; } }