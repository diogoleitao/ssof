<?php
class Twig_Tests_FileCachingTest extends PHPUnit_Framework_TestCase { protected $fileName; protected $env; protected $tmpDir; public function setUp() { $this->tmpDir = sys_get_temp_dir() . '/TwigTests'; if (!file_exists($this->tmpDir)) { @mkdir($this->tmpDir, 511, true); } if (!is_writable($this->tmpDir)) { $this->markTestSkipped(sprintf('Unable to run the tests as "%s" is not writable.', $this->tmpDir)); } $this->env = new Twig_Environment(new Twig_Loader_Array(array('index' => 'index', 'index2' => 'index2')), array('cache' => $this->tmpDir)); } public function tearDown() { if ($this->fileName) { unlink($this->fileName); } $this->spcc56c3($this->tmpDir); } public function testWritingCacheFiles() { $sp3eec35 = 'index'; $this->env->loadTemplate($sp3eec35); $spf48a0d = $this->env->getCacheFilename($sp3eec35); $this->assertTrue(file_exists($spf48a0d), 'Cache file does not exist.'); $this->fileName = $spf48a0d; } public function testClearingCacheFiles() { $sp3eec35 = 'index2'; $this->env->loadTemplate($sp3eec35); $spf48a0d = $this->env->getCacheFilename($sp3eec35); $this->assertTrue(file_exists($spf48a0d), 'Cache file does not exist.'); $this->env->clearCacheFiles(); $this->assertFalse(file_exists($spf48a0d), 'Cache file was not cleared.'); } private function spcc56c3($sp3ac180) { $spca2a7a = opendir($sp3ac180); while (false !== ($spc15032 = readdir($spca2a7a))) { if (in_array($spc15032, array('.', '..'))) { continue; } if (is_dir($sp3ac180 . '/' . $spc15032)) { self::removeDir($sp3ac180 . '/' . $spc15032); } else { unlink($sp3ac180 . '/' . $spc15032); } } closedir($spca2a7a); rmdir($sp3ac180); } }