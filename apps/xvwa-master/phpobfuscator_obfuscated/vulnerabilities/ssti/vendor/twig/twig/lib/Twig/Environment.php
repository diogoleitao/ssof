<?php
class Twig_Environment { const VERSION = '1.19.0'; protected $charset; protected $loader; protected $debug; protected $autoReload; protected $cache; protected $lexer; protected $parser; protected $compiler; protected $baseTemplateClass; protected $extensions; protected $parsers; protected $visitors; protected $filters; protected $tests; protected $functions; protected $globals; protected $runtimeInitialized; protected $extensionInitialized; protected $loadedTemplates; protected $strictVariables; protected $unaryOperators; protected $binaryOperators; protected $templateClassPrefix = '__TwigTemplate_'; protected $functionCallbacks; protected $filterCallbacks; protected $staging; public function __construct(Twig_LoaderInterface $spdfb5a9 = null, $sp44f03d = array()) { if (null !== $spdfb5a9) { $this->setLoader($spdfb5a9); } $sp44f03d = array_merge(array('debug' => false, 'charset' => 'UTF-8', 'base_template_class' => 'Twig_Template', 'strict_variables' => false, 'autoescape' => 'html', 'cache' => false, 'auto_reload' => null, 'optimizations' => -1), $sp44f03d); $this->debug = (bool) $sp44f03d['debug']; $this->charset = strtoupper($sp44f03d['charset']); $this->baseTemplateClass = $sp44f03d['base_template_class']; $this->autoReload = null === $sp44f03d['auto_reload'] ? $this->debug : (bool) $sp44f03d['auto_reload']; $this->strictVariables = (bool) $sp44f03d['strict_variables']; $this->runtimeInitialized = false; $this->setCache($sp44f03d['cache']); $this->functionCallbacks = array(); $this->filterCallbacks = array(); $this->addExtension(new Twig_Extension_Core()); $this->addExtension(new Twig_Extension_Escaper($sp44f03d['autoescape'])); $this->addExtension(new Twig_Extension_Optimizer($sp44f03d['optimizations'])); $this->extensionInitialized = false; $this->staging = new Twig_Extension_Staging(); } public function getBaseTemplateClass() { return $this->baseTemplateClass; } public function setBaseTemplateClass($spbd0159) { $this->baseTemplateClass = $spbd0159; } public function enableDebug() { $this->debug = true; } public function disableDebug() { $this->debug = false; } public function isDebug() { return $this->debug; } public function enableAutoReload() { $this->autoReload = true; } public function disableAutoReload() { $this->autoReload = false; } public function isAutoReload() { return $this->autoReload; } public function enableStrictVariables() { $this->strictVariables = true; } public function disableStrictVariables() { $this->strictVariables = false; } public function isStrictVariables() { return $this->strictVariables; } public function getCache() { return $this->cache; } public function setCache($sp1f2d15) { $this->cache = $sp1f2d15 ? $sp1f2d15 : false; } public function getCacheFilename($sp3eec35) { if (false === $this->cache) { return false; } $spbd0159 = substr($this->getTemplateClass($sp3eec35), strlen($this->templateClassPrefix)); return $this->getCache() . '/' . $spbd0159[0] . '/' . $spbd0159[1] . '/' . $spbd0159 . '.php'; } public function getTemplateClass($sp3eec35, $sp0eb4bf = null) { return $this->templateClassPrefix . hash('sha256', $this->getLoader()->getCacheKey($sp3eec35)) . (null === $sp0eb4bf ? '' : '_' . $sp0eb4bf); } public function getTemplateClassPrefix() { return $this->templateClassPrefix; } public function render($sp3eec35, array $spdacfa9 = array()) { return $this->loadTemplate($sp3eec35)->render($spdacfa9); } public function display($sp3eec35, array $spdacfa9 = array()) { $this->loadTemplate($sp3eec35)->display($spdacfa9); } public function loadTemplate($sp3eec35, $sp0eb4bf = null) { $sp3302f7 = $this->getTemplateClass($sp3eec35, $sp0eb4bf); if (isset($this->loadedTemplates[$sp3302f7])) { return $this->loadedTemplates[$sp3302f7]; } if (!class_exists($sp3302f7, false)) { if (false === ($sp1f2d15 = $this->getCacheFilename($sp3eec35))) { eval('?>' . $this->compileSource($this->getLoader()->getSource($sp3eec35), $sp3eec35)); } else { if (!is_file($sp1f2d15) || $this->isAutoReload() && !$this->isTemplateFresh($sp3eec35, filemtime($sp1f2d15))) { $this->writeCacheFile($sp1f2d15, $this->compileSource($this->getLoader()->getSource($sp3eec35), $sp3eec35)); } require_once $sp1f2d15; } } if (!$this->runtimeInitialized) { $this->initRuntime(); } return $this->loadedTemplates[$sp3302f7] = new $sp3302f7($this); } public function createTemplate($spe32893) { $sp3eec35 = sprintf('__string_template__%s', hash('sha256', uniqid(mt_rand(), true), false)); $spdfb5a9 = new Twig_Loader_Chain(array(new Twig_Loader_Array(array($sp3eec35 => $spe32893)), $spffe8f5 = $this->getLoader())); $this->setLoader($spdfb5a9); try { $spe32893 = $this->loadTemplate($sp3eec35); } catch (Exception $spbcee8e) { $this->setLoader($spffe8f5); throw $spbcee8e; } $this->setLoader($spffe8f5); return $spe32893; } public function isTemplateFresh($sp3eec35, $sp37e15f) { foreach ($this->extensions as $spd24372) { $sp693624 = new ReflectionObject($spd24372); if (filemtime($sp693624->getFileName()) > $sp37e15f) { return false; } } return $this->getLoader()->isFresh($sp3eec35, $sp37e15f); } public function resolveTemplate($sp5d289c) { if (!is_array($sp5d289c)) { $sp5d289c = array($sp5d289c); } foreach ($sp5d289c as $sp3eec35) { if ($sp3eec35 instanceof Twig_Template) { return $sp3eec35; } try { return $this->loadTemplate($sp3eec35); } catch (Twig_Error_Loader $spbcee8e) { } } if (1 === count($sp5d289c)) { throw $spbcee8e; } throw new Twig_Error_Loader(sprintf('Unable to find one of the following templates: "%s".', implode('", "', $sp5d289c))); } public function clearTemplateCache() { $this->loadedTemplates = array(); } public function clearCacheFiles() { if (false === $this->cache) { return; } foreach (new RecursiveIteratorIterator(new RecursiveDirectoryIterator($this->cache), RecursiveIteratorIterator::LEAVES_ONLY) as $spc15032) { if ($spc15032->isFile()) { @unlink($spc15032->getPathname()); } } } public function getLexer() { if (null === $this->lexer) { $this->lexer = new Twig_Lexer($this); } return $this->lexer; } public function setLexer(Twig_LexerInterface $sped078a) { $this->lexer = $sped078a; } public function tokenize($sp5d0098, $sp3eec35 = null) { return $this->getLexer()->tokenize($sp5d0098, $sp3eec35); } public function getParser() { if (null === $this->parser) { $this->parser = new Twig_Parser($this); } return $this->parser; } public function setParser(Twig_ParserInterface $sp284ef6) { $this->parser = $sp284ef6; } public function parse(Twig_TokenStream $sp8ec2ac) { return $this->getParser()->parse($sp8ec2ac); } public function getCompiler() { if (null === $this->compiler) { $this->compiler = new Twig_Compiler($this); } return $this->compiler; } public function setCompiler(Twig_CompilerInterface $spa1c015) { $this->compiler = $spa1c015; } public function compile(Twig_NodeInterface $spcefb62) { return $this->getCompiler()->compile($spcefb62)->getSource(); } public function compileSource($sp5d0098, $sp3eec35 = null) { try { return $this->compile($this->parse($this->tokenize($sp5d0098, $sp3eec35))); } catch (Twig_Error $spbcee8e) { $spbcee8e->setTemplateFile($sp3eec35); throw $spbcee8e; } catch (Exception $spbcee8e) { throw new Twig_Error_Syntax(sprintf('An exception has been thrown during the compilation of a template ("%s").', $spbcee8e->getMessage()), -1, $sp3eec35, $spbcee8e); } } public function setLoader(Twig_LoaderInterface $spdfb5a9) { $this->loader = $spdfb5a9; } public function getLoader() { if (null === $this->loader) { throw new LogicException('You must set a loader first.'); } return $this->loader; } public function setCharset($spdc716e) { $this->charset = strtoupper($spdc716e); } public function getCharset() { return $this->charset; } public function initRuntime() { $this->runtimeInitialized = true; foreach ($this->getExtensions() as $spd24372) { $spd24372->initRuntime($this); } } public function hasExtension($sp3eec35) { return isset($this->extensions[$sp3eec35]); } public function getExtension($sp3eec35) { if (!isset($this->extensions[$sp3eec35])) { throw new Twig_Error_Runtime(sprintf('The "%s" extension is not enabled.', $sp3eec35)); } return $this->extensions[$sp3eec35]; } public function addExtension(Twig_ExtensionInterface $spd24372) { if ($this->extensionInitialized) { throw new LogicException(sprintf('Unable to register extension "%s" as extensions have already been initialized.', $spd24372->getName())); } $this->extensions[$spd24372->getName()] = $spd24372; } public function removeExtension($sp3eec35) { if ($this->extensionInitialized) { throw new LogicException(sprintf('Unable to remove extension "%s" as extensions have already been initialized.', $sp3eec35)); } unset($this->extensions[$sp3eec35]); } public function setExtensions(array $sp7400e4) { foreach ($sp7400e4 as $spd24372) { $this->addExtension($spd24372); } } public function getExtensions() { return $this->extensions; } public function addTokenParser(Twig_TokenParserInterface $sp284ef6) { if ($this->extensionInitialized) { throw new LogicException('Unable to add a token parser as extensions have already been initialized.'); } $this->staging->addTokenParser($sp284ef6); } public function getTokenParsers() { if (!$this->extensionInitialized) { $this->initExtensions(); } return $this->parsers; } public function getTags() { $sp53db34 = array(); foreach ($this->getTokenParsers()->getParsers() as $sp284ef6) { if ($sp284ef6 instanceof Twig_TokenParserInterface) { $sp53db34[$sp284ef6->getTag()] = $sp284ef6; } } return $sp53db34; } public function addNodeVisitor(Twig_NodeVisitorInterface $sp0bf47c) { if ($this->extensionInitialized) { throw new LogicException('Unable to add a node visitor as extensions have already been initialized.'); } $this->staging->addNodeVisitor($sp0bf47c); } public function getNodeVisitors() { if (!$this->extensionInitialized) { $this->initExtensions(); } return $this->visitors; } public function addFilter($sp3eec35, $sp4a901b = null) { if (!$sp3eec35 instanceof Twig_SimpleFilter && !($sp4a901b instanceof Twig_SimpleFilter || $sp4a901b instanceof Twig_FilterInterface)) { throw new LogicException('A filter must be an instance of Twig_FilterInterface or Twig_SimpleFilter'); } if ($sp3eec35 instanceof Twig_SimpleFilter) { $sp4a901b = $sp3eec35; $sp3eec35 = $sp4a901b->getName(); } if ($this->extensionInitialized) { throw new LogicException(sprintf('Unable to add filter "%s" as extensions have already been initialized.', $sp3eec35)); } $this->staging->addFilter($sp3eec35, $sp4a901b); } public function getFilter($sp3eec35) { if (!$this->extensionInitialized) { $this->initExtensions(); } if (isset($this->filters[$sp3eec35])) { return $this->filters[$sp3eec35]; } foreach ($this->filters as $sp785a24 => $sp4a901b) { $sp785a24 = str_replace('\\*', '(.*?)', preg_quote($sp785a24, '#'), $spffdcfa); if ($spffdcfa) { if (preg_match('#^' . $sp785a24 . '$#', $sp3eec35, $sp0b25b7)) { array_shift($sp0b25b7); $sp4a901b->setArguments($sp0b25b7); return $sp4a901b; } } } foreach ($this->filterCallbacks as $sp13d8ec) { if (false !== ($sp4a901b = call_user_func($sp13d8ec, $sp3eec35))) { return $sp4a901b; } } return false; } public function registerUndefinedFilterCallback($sp9a2590) { $this->filterCallbacks[] = $sp9a2590; } public function getFilters() { if (!$this->extensionInitialized) { $this->initExtensions(); } return $this->filters; } public function addTest($sp3eec35, $sp26d1b4 = null) { if (!$sp3eec35 instanceof Twig_SimpleTest && !($sp26d1b4 instanceof Twig_SimpleTest || $sp26d1b4 instanceof Twig_TestInterface)) { throw new LogicException('A test must be an instance of Twig_TestInterface or Twig_SimpleTest'); } if ($sp3eec35 instanceof Twig_SimpleTest) { $sp26d1b4 = $sp3eec35; $sp3eec35 = $sp26d1b4->getName(); } if ($this->extensionInitialized) { throw new LogicException(sprintf('Unable to add test "%s" as extensions have already been initialized.', $sp3eec35)); } $this->staging->addTest($sp3eec35, $sp26d1b4); } public function getTests() { if (!$this->extensionInitialized) { $this->initExtensions(); } return $this->tests; } public function getTest($sp3eec35) { if (!$this->extensionInitialized) { $this->initExtensions(); } if (isset($this->tests[$sp3eec35])) { return $this->tests[$sp3eec35]; } return false; } public function addFunction($sp3eec35, $sp9b51b9 = null) { if (!$sp3eec35 instanceof Twig_SimpleFunction && !($sp9b51b9 instanceof Twig_SimpleFunction || $sp9b51b9 instanceof Twig_FunctionInterface)) { throw new LogicException('A function must be an instance of Twig_FunctionInterface or Twig_SimpleFunction'); } if ($sp3eec35 instanceof Twig_SimpleFunction) { $sp9b51b9 = $sp3eec35; $sp3eec35 = $sp9b51b9->getName(); } if ($this->extensionInitialized) { throw new LogicException(sprintf('Unable to add function "%s" as extensions have already been initialized.', $sp3eec35)); } $this->staging->addFunction($sp3eec35, $sp9b51b9); } public function getFunction($sp3eec35) { if (!$this->extensionInitialized) { $this->initExtensions(); } if (isset($this->functions[$sp3eec35])) { return $this->functions[$sp3eec35]; } foreach ($this->functions as $sp785a24 => $sp9b51b9) { $sp785a24 = str_replace('\\*', '(.*?)', preg_quote($sp785a24, '#'), $spffdcfa); if ($spffdcfa) { if (preg_match('#^' . $sp785a24 . '$#', $sp3eec35, $sp0b25b7)) { array_shift($sp0b25b7); $sp9b51b9->setArguments($sp0b25b7); return $sp9b51b9; } } } foreach ($this->functionCallbacks as $sp13d8ec) { if (false !== ($sp9b51b9 = call_user_func($sp13d8ec, $sp3eec35))) { return $sp9b51b9; } } return false; } public function registerUndefinedFunctionCallback($sp9a2590) { $this->functionCallbacks[] = $sp9a2590; } public function getFunctions() { if (!$this->extensionInitialized) { $this->initExtensions(); } return $this->functions; } public function addGlobal($sp3eec35, $spbb4d96) { if ($this->extensionInitialized || $this->runtimeInitialized) { if (null === $this->globals) { $this->globals = $this->initGlobals(); } } if ($this->extensionInitialized || $this->runtimeInitialized) { $this->globals[$sp3eec35] = $spbb4d96; } else { $this->staging->addGlobal($sp3eec35, $spbb4d96); } } public function getGlobals() { if (!$this->runtimeInitialized && !$this->extensionInitialized) { return $this->initGlobals(); } if (null === $this->globals) { $this->globals = $this->initGlobals(); } return $this->globals; } public function mergeGlobals(array $spdacfa9) { foreach ($this->getGlobals() as $spd888fc => $spbb4d96) { if (!array_key_exists($spd888fc, $spdacfa9)) { $spdacfa9[$spd888fc] = $spbb4d96; } } return $spdacfa9; } public function getUnaryOperators() { if (!$this->extensionInitialized) { $this->initExtensions(); } return $this->unaryOperators; } public function getBinaryOperators() { if (!$this->extensionInitialized) { $this->initExtensions(); } return $this->binaryOperators; } public function computeAlternatives($sp3eec35, $spe1972e) { $sp249a0e = array(); foreach ($spe1972e as $spb437e7) { $spc715bd = levenshtein($sp3eec35, $spb437e7); if ($spc715bd <= strlen($sp3eec35) / 3 || false !== strpos($spb437e7, $sp3eec35)) { $sp249a0e[$spb437e7] = $spc715bd; } } asort($sp249a0e); return array_keys($sp249a0e); } protected function initGlobals() { $sp718c8c = array(); foreach ($this->extensions as $spd24372) { $spdc32f2 = $spd24372->getGlobals(); if (!is_array($spdc32f2)) { throw new UnexpectedValueException(sprintf('"%s::getGlobals()" must return an array of globals.', get_class($spd24372))); } $sp718c8c[] = $spdc32f2; } $sp718c8c[] = $this->staging->getGlobals(); return call_user_func_array('array_merge', $sp718c8c); } protected function initExtensions() { if ($this->extensionInitialized) { return; } $this->extensionInitialized = true; $this->parsers = new Twig_TokenParserBroker(); $this->filters = array(); $this->functions = array(); $this->tests = array(); $this->visitors = array(); $this->unaryOperators = array(); $this->binaryOperators = array(); foreach ($this->extensions as $spd24372) { $this->initExtension($spd24372); } $this->initExtension($this->staging); } protected function initExtension(Twig_ExtensionInterface $spd24372) { foreach ($spd24372->getFilters() as $sp3eec35 => $sp4a901b) { if ($sp3eec35 instanceof Twig_SimpleFilter) { $sp4a901b = $sp3eec35; $sp3eec35 = $sp4a901b->getName(); } elseif ($sp4a901b instanceof Twig_SimpleFilter) { $sp3eec35 = $sp4a901b->getName(); } $this->filters[$sp3eec35] = $sp4a901b; } foreach ($spd24372->getFunctions() as $sp3eec35 => $sp9b51b9) { if ($sp3eec35 instanceof Twig_SimpleFunction) { $sp9b51b9 = $sp3eec35; $sp3eec35 = $sp9b51b9->getName(); } elseif ($sp9b51b9 instanceof Twig_SimpleFunction) { $sp3eec35 = $sp9b51b9->getName(); } $this->functions[$sp3eec35] = $sp9b51b9; } foreach ($spd24372->getTests() as $sp3eec35 => $sp26d1b4) { if ($sp3eec35 instanceof Twig_SimpleTest) { $sp26d1b4 = $sp3eec35; $sp3eec35 = $sp26d1b4->getName(); } elseif ($sp26d1b4 instanceof Twig_SimpleTest) { $sp3eec35 = $sp26d1b4->getName(); } $this->tests[$sp3eec35] = $sp26d1b4; } foreach ($spd24372->getTokenParsers() as $sp284ef6) { if ($sp284ef6 instanceof Twig_TokenParserInterface) { $this->parsers->addTokenParser($sp284ef6); } elseif ($sp284ef6 instanceof Twig_TokenParserBrokerInterface) { $this->parsers->addTokenParserBroker($sp284ef6); } else { throw new LogicException('getTokenParsers() must return an array of Twig_TokenParserInterface or Twig_TokenParserBrokerInterface instances'); } } foreach ($spd24372->getNodeVisitors() as $sp0bf47c) { $this->visitors[] = $sp0bf47c; } if ($spcdc3b0 = $spd24372->getOperators()) { if (2 !== count($spcdc3b0)) { throw new InvalidArgumentException(sprintf('"%s::getOperators()" does not return a valid operators array.', get_class($spd24372))); } $this->unaryOperators = array_merge($this->unaryOperators, $spcdc3b0[0]); $this->binaryOperators = array_merge($this->binaryOperators, $spcdc3b0[1]); } } protected function writeCacheFile($spc15032, $spd1867e) { $sp7bc751 = dirname($spc15032); if (!is_dir($sp7bc751)) { if (false === @mkdir($sp7bc751, 511, true)) { clearstatcache(false, $sp7bc751); if (!is_dir($sp7bc751)) { throw new RuntimeException(sprintf('Unable to create the cache directory (%s).', $sp7bc751)); } } } elseif (!is_writable($sp7bc751)) { throw new RuntimeException(sprintf('Unable to write in the cache directory (%s).', $sp7bc751)); } $speb5c54 = tempnam($sp7bc751, basename($spc15032)); if (false !== @file_put_contents($speb5c54, $spd1867e)) { if (@rename($speb5c54, $spc15032) || @copy($speb5c54, $spc15032) && unlink($speb5c54)) { @chmod($spc15032, 438 & ~umask()); return; } } throw new RuntimeException(sprintf('Failed to write cache file "%s".', $spc15032)); } }