<?php
class Twig_TokenParser_For extends Twig_TokenParser { public function parse(Twig_Token $sp650e38) { $sp1f599c = $sp650e38->getLine(); $sp8ec2ac = $this->parser->getStream(); $spd8f1e3 = $this->parser->getExpressionParser()->parseAssignmentExpression(); $sp8ec2ac->expect(Twig_Token::OPERATOR_TYPE, 'in'); $spf6a5d7 = $this->parser->getExpressionParser()->parseExpression(); $sp8ff448 = null; if ($sp8ec2ac->nextIf(Twig_Token::NAME_TYPE, 'if')) { $sp8ff448 = $this->parser->getExpressionParser()->parseExpression(); } $sp8ec2ac->expect(Twig_Token::BLOCK_END_TYPE); $sp1965de = $this->parser->subparse(array($this, 'decideForFork')); if ($sp8ec2ac->next()->getValue() == 'else') { $sp8ec2ac->expect(Twig_Token::BLOCK_END_TYPE); $sp4fa8a7 = $this->parser->subparse(array($this, 'decideForEnd'), true); } else { $sp4fa8a7 = null; } $sp8ec2ac->expect(Twig_Token::BLOCK_END_TYPE); if (count($spd8f1e3) > 1) { $spf6dbe1 = $spd8f1e3->getNode(0); $spf6dbe1 = new Twig_Node_Expression_AssignName($spf6dbe1->getAttribute('name'), $spf6dbe1->getLine()); $spf730ed = $spd8f1e3->getNode(1); $spf730ed = new Twig_Node_Expression_AssignName($spf730ed->getAttribute('name'), $spf730ed->getLine()); } else { $spf6dbe1 = new Twig_Node_Expression_AssignName('_key', $sp1f599c); $spf730ed = $spd8f1e3->getNode(0); $spf730ed = new Twig_Node_Expression_AssignName($spf730ed->getAttribute('name'), $spf730ed->getLine()); } if ($sp8ff448) { $this->checkLoopUsageCondition($sp8ec2ac, $sp8ff448); $this->checkLoopUsageBody($sp8ec2ac, $sp1965de); } return new Twig_Node_For($spf6dbe1, $spf730ed, $spf6a5d7, $sp8ff448, $sp1965de, $sp4fa8a7, $sp1f599c, $this->getTag()); } public function decideForFork(Twig_Token $sp650e38) { return $sp650e38->test(array('else', 'endfor')); } public function decideForEnd(Twig_Token $sp650e38) { return $sp650e38->test('endfor'); } protected function checkLoopUsageCondition(Twig_TokenStream $sp8ec2ac, Twig_NodeInterface $spcefb62) { if ($spcefb62 instanceof Twig_Node_Expression_GetAttr && $spcefb62->getNode('node') instanceof Twig_Node_Expression_Name && 'loop' == $spcefb62->getNode('node')->getAttribute('name')) { throw new Twig_Error_Syntax('The "loop" variable cannot be used in a looping condition', $spcefb62->getLine(), $sp8ec2ac->getFilename()); } foreach ($spcefb62 as $sp96b41e) { if (!$sp96b41e) { continue; } $this->checkLoopUsageCondition($sp8ec2ac, $sp96b41e); } } protected function checkLoopUsageBody(Twig_TokenStream $sp8ec2ac, Twig_NodeInterface $spcefb62) { if ($spcefb62 instanceof Twig_Node_Expression_GetAttr && $spcefb62->getNode('node') instanceof Twig_Node_Expression_Name && 'loop' == $spcefb62->getNode('node')->getAttribute('name')) { $spd4a003 = $spcefb62->getNode('attribute'); if ($spd4a003 instanceof Twig_Node_Expression_Constant && in_array($spd4a003->getAttribute('value'), array('length', 'revindex0', 'revindex', 'last'))) { throw new Twig_Error_Syntax(sprintf('The "loop.%s" variable is not defined when looping with a condition', $spd4a003->getAttribute('value')), $spcefb62->getLine(), $sp8ec2ac->getFilename()); } } if ($spcefb62 instanceof Twig_Node_For) { return; } foreach ($spcefb62 as $sp96b41e) { if (!$sp96b41e) { continue; } $this->checkLoopUsageBody($sp8ec2ac, $sp96b41e); } } public function getTag() { return 'for'; } }