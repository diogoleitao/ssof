<?php
class Twig_Tests_TokenStreamTest extends PHPUnit_Framework_TestCase { protected static $tokens; public function setUp() { self::$tokens = array(new Twig_Token(Twig_Token::TEXT_TYPE, 1, 1), new Twig_Token(Twig_Token::TEXT_TYPE, 2, 1), new Twig_Token(Twig_Token::TEXT_TYPE, 3, 1), new Twig_Token(Twig_Token::TEXT_TYPE, 4, 1), new Twig_Token(Twig_Token::TEXT_TYPE, 5, 1), new Twig_Token(Twig_Token::TEXT_TYPE, 6, 1), new Twig_Token(Twig_Token::TEXT_TYPE, 7, 1), new Twig_Token(Twig_Token::EOF_TYPE, 0, 1)); } public function testNext() { $sp8ec2ac = new Twig_TokenStream(self::$tokens); $spb5c5e5 = array(); while (!$sp8ec2ac->isEOF()) { $sp650e38 = $sp8ec2ac->next(); $spb5c5e5[] = $sp650e38->getValue(); } $this->assertEquals('1, 2, 3, 4, 5, 6, 7', implode(', ', $spb5c5e5), '->next() advances the pointer and returns the current token'); } public function testEndOfTemplateNext() { $sp8ec2ac = new Twig_TokenStream(array(new Twig_Token(Twig_Token::BLOCK_START_TYPE, 1, 1))); while (!$sp8ec2ac->isEOF()) { $sp8ec2ac->next(); } } public function testEndOfTemplateLook() { $sp8ec2ac = new Twig_TokenStream(array(new Twig_Token(Twig_Token::BLOCK_START_TYPE, 1, 1))); while (!$sp8ec2ac->isEOF()) { $sp8ec2ac->look(); $sp8ec2ac->next(); } } }