<?php
class Twig_TokenParser_Include extends Twig_TokenParser { public function parse(Twig_Token $sp650e38) { $sp005e3e = $this->parser->getExpressionParser()->parseExpression(); list($sp3186fb, $sp8b7751, $spb97f33) = $this->parseArguments(); return new Twig_Node_Include($sp005e3e, $sp3186fb, $sp8b7751, $spb97f33, $sp650e38->getLine(), $this->getTag()); } protected function parseArguments() { $sp8ec2ac = $this->parser->getStream(); $spb97f33 = false; if ($sp8ec2ac->nextIf(Twig_Token::NAME_TYPE, 'ignore')) { $sp8ec2ac->expect(Twig_Token::NAME_TYPE, 'missing'); $spb97f33 = true; } $sp3186fb = null; if ($sp8ec2ac->nextIf(Twig_Token::NAME_TYPE, 'with')) { $sp3186fb = $this->parser->getExpressionParser()->parseExpression(); } $sp8b7751 = false; if ($sp8ec2ac->nextIf(Twig_Token::NAME_TYPE, 'only')) { $sp8b7751 = true; } $sp8ec2ac->expect(Twig_Token::BLOCK_END_TYPE); return array($sp3186fb, $sp8b7751, $spb97f33); } public function getTag() { return 'include'; } }