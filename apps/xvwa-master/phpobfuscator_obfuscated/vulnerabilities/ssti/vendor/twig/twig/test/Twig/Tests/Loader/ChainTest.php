<?php
class Twig_Tests_Loader_ChainTest extends PHPUnit_Framework_TestCase { public function testGetSource() { $spdfb5a9 = new Twig_Loader_Chain(array(new Twig_Loader_Array(array('foo' => 'bar')), new Twig_Loader_Array(array('foo' => 'foobar', 'bar' => 'foo')))); $this->assertEquals('bar', $spdfb5a9->getSource('foo')); $this->assertEquals('foo', $spdfb5a9->getSource('bar')); } public function testGetSourceWhenTemplateDoesNotExist() { $spdfb5a9 = new Twig_Loader_Chain(array()); $spdfb5a9->getSource('foo'); } public function testGetCacheKey() { $spdfb5a9 = new Twig_Loader_Chain(array(new Twig_Loader_Array(array('foo' => 'bar')), new Twig_Loader_Array(array('foo' => 'foobar', 'bar' => 'foo')))); $this->assertEquals('bar', $spdfb5a9->getCacheKey('foo')); $this->assertEquals('foo', $spdfb5a9->getCacheKey('bar')); } public function testGetCacheKeyWhenTemplateDoesNotExist() { $spdfb5a9 = new Twig_Loader_Chain(array()); $spdfb5a9->getCacheKey('foo'); } public function testAddLoader() { $spdfb5a9 = new Twig_Loader_Chain(); $spdfb5a9->addLoader(new Twig_Loader_Array(array('foo' => 'bar'))); $this->assertEquals('bar', $spdfb5a9->getSource('foo')); } public function testExists() { $spf968f4 = $this->getMock('Twig_Loader_Array', array('exists', 'getSource'), array(), '', false); $spf968f4->expects($this->once())->method('exists')->will($this->returnValue(false)); $spf968f4->expects($this->never())->method('getSource'); $sp41706c = $this->getMock('Twig_LoaderInterface'); $sp41706c->expects($this->once())->method('getSource')->will($this->returnValue('content')); $spdfb5a9 = new Twig_Loader_Chain(); $spdfb5a9->addLoader($spf968f4); $spdfb5a9->addLoader($sp41706c); $this->assertTrue($spdfb5a9->exists('foo')); } }