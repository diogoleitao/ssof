<?php
class Twig_TokenParser_Macro extends Twig_TokenParser { public function parse(Twig_Token $sp650e38) { $sp1f599c = $sp650e38->getLine(); $sp8ec2ac = $this->parser->getStream(); $sp3eec35 = $sp8ec2ac->expect(Twig_Token::NAME_TYPE)->getValue(); $spc5cc06 = $this->parser->getExpressionParser()->parseArguments(true, true); $sp8ec2ac->expect(Twig_Token::BLOCK_END_TYPE); $this->parser->pushLocalScope(); $sp1965de = $this->parser->subparse(array($this, 'decideBlockEnd'), true); if ($sp650e38 = $sp8ec2ac->nextIf(Twig_Token::NAME_TYPE)) { $spbb4d96 = $sp650e38->getValue(); if ($spbb4d96 != $sp3eec35) { throw new Twig_Error_Syntax(sprintf('Expected endmacro for macro "%s" (but "%s" given)', $sp3eec35, $spbb4d96), $sp8ec2ac->getCurrent()->getLine(), $sp8ec2ac->getFilename()); } } $this->parser->popLocalScope(); $sp8ec2ac->expect(Twig_Token::BLOCK_END_TYPE); $this->parser->setMacro($sp3eec35, new Twig_Node_Macro($sp3eec35, new Twig_Node_Body(array($sp1965de)), $spc5cc06, $sp1f599c, $this->getTag())); } public function decideBlockEnd(Twig_Token $sp650e38) { return $sp650e38->test('endmacro'); } public function getTag() { return 'macro'; } }