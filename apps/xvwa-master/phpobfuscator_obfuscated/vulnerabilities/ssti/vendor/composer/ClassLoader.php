<?php
namespace Composer\Autoload; class ClassLoader { private $prefixLengthsPsr4 = array(); private $prefixDirsPsr4 = array(); private $fallbackDirsPsr4 = array(); private $prefixesPsr0 = array(); private $fallbackDirsPsr0 = array(); private $useIncludePath = false; private $classMap = array(); private $classMapAuthoritative = false; public function getPrefixes() { if (!empty($this->prefixesPsr0)) { return call_user_func_array('array_merge', $this->prefixesPsr0); } return array(); } public function getPrefixesPsr4() { return $this->prefixDirsPsr4; } public function getFallbackDirs() { return $this->fallbackDirsPsr0; } public function getFallbackDirsPsr4() { return $this->fallbackDirsPsr4; } public function getClassMap() { return $this->classMap; } public function addClassMap(array $sp58f50c) { if ($this->classMap) { $this->classMap = array_merge($this->classMap, $sp58f50c); } else { $this->classMap = $sp58f50c; } } public function add($sp754d6b, $spa3d611, $sp8b9581 = false) { if (!$sp754d6b) { if ($sp8b9581) { $this->fallbackDirsPsr0 = array_merge((array) $spa3d611, $this->fallbackDirsPsr0); } else { $this->fallbackDirsPsr0 = array_merge($this->fallbackDirsPsr0, (array) $spa3d611); } return; } $sp94ea74 = $sp754d6b[0]; if (!isset($this->prefixesPsr0[$sp94ea74][$sp754d6b])) { $this->prefixesPsr0[$sp94ea74][$sp754d6b] = (array) $spa3d611; return; } if ($sp8b9581) { $this->prefixesPsr0[$sp94ea74][$sp754d6b] = array_merge((array) $spa3d611, $this->prefixesPsr0[$sp94ea74][$sp754d6b]); } else { $this->prefixesPsr0[$sp94ea74][$sp754d6b] = array_merge($this->prefixesPsr0[$sp94ea74][$sp754d6b], (array) $spa3d611); } } public function addPsr4($sp754d6b, $spa3d611, $sp8b9581 = false) { if (!$sp754d6b) { if ($sp8b9581) { $this->fallbackDirsPsr4 = array_merge((array) $spa3d611, $this->fallbackDirsPsr4); } else { $this->fallbackDirsPsr4 = array_merge($this->fallbackDirsPsr4, (array) $spa3d611); } } elseif (!isset($this->prefixDirsPsr4[$sp754d6b])) { $sp64e7f0 = strlen($sp754d6b); if ('\\' !== $sp754d6b[$sp64e7f0 - 1]) { throw new \InvalidArgumentException('A non-empty PSR-4 prefix must end with a namespace separator.'); } $this->prefixLengthsPsr4[$sp754d6b[0]][$sp754d6b] = $sp64e7f0; $this->prefixDirsPsr4[$sp754d6b] = (array) $spa3d611; } elseif ($sp8b9581) { $this->prefixDirsPsr4[$sp754d6b] = array_merge((array) $spa3d611, $this->prefixDirsPsr4[$sp754d6b]); } else { $this->prefixDirsPsr4[$sp754d6b] = array_merge($this->prefixDirsPsr4[$sp754d6b], (array) $spa3d611); } } public function set($sp754d6b, $spa3d611) { if (!$sp754d6b) { $this->fallbackDirsPsr0 = (array) $spa3d611; } else { $this->prefixesPsr0[$sp754d6b[0]][$sp754d6b] = (array) $spa3d611; } } public function setPsr4($sp754d6b, $spa3d611) { if (!$sp754d6b) { $this->fallbackDirsPsr4 = (array) $spa3d611; } else { $sp64e7f0 = strlen($sp754d6b); if ('\\' !== $sp754d6b[$sp64e7f0 - 1]) { throw new \InvalidArgumentException('A non-empty PSR-4 prefix must end with a namespace separator.'); } $this->prefixLengthsPsr4[$sp754d6b[0]][$sp754d6b] = $sp64e7f0; $this->prefixDirsPsr4[$sp754d6b] = (array) $spa3d611; } } public function setUseIncludePath($sp29223a) { $this->useIncludePath = $sp29223a; } public function getUseIncludePath() { return $this->useIncludePath; } public function setClassMapAuthoritative($spadbd9d) { $this->classMapAuthoritative = $spadbd9d; } public function isClassMapAuthoritative() { return $this->classMapAuthoritative; } public function register($sp8b9581 = false) { spl_autoload_register(array($this, 'loadClass'), true, $sp8b9581); } public function unregister() { spl_autoload_unregister(array($this, 'loadClass')); } public function loadClass($spbd0159) { if ($spc15032 = $this->findFile($spbd0159)) { includeFile($spc15032); return true; } } public function findFile($spbd0159) { if ('\\' == $spbd0159[0]) { $spbd0159 = substr($spbd0159, 1); } if (isset($this->classMap[$spbd0159])) { return $this->classMap[$spbd0159]; } if ($this->classMapAuthoritative) { return false; } $spc15032 = $this->spf107b9($spbd0159, '.php'); if ($spc15032 === null && defined('HHVM_VERSION')) { $spc15032 = $this->spf107b9($spbd0159, '.hh'); } if ($spc15032 === null) { return $this->classMap[$spbd0159] = false; } return $spc15032; } private function spf107b9($spbd0159, $spae86ff) { $spbcda25 = strtr($spbd0159, '\\', DIRECTORY_SEPARATOR) . $spae86ff; $sp94ea74 = $spbd0159[0]; if (isset($this->prefixLengthsPsr4[$sp94ea74])) { foreach ($this->prefixLengthsPsr4[$sp94ea74] as $sp754d6b => $sp64e7f0) { if (0 === strpos($spbd0159, $sp754d6b)) { foreach ($this->prefixDirsPsr4[$sp754d6b] as $sp7bc751) { if (file_exists($spc15032 = $sp7bc751 . DIRECTORY_SEPARATOR . substr($spbcda25, $sp64e7f0))) { return $spc15032; } } } } } foreach ($this->fallbackDirsPsr4 as $sp7bc751) { if (file_exists($spc15032 = $sp7bc751 . DIRECTORY_SEPARATOR . $spbcda25)) { return $spc15032; } } if (false !== ($spd8e1fc = strrpos($spbd0159, '\\'))) { $sp3e09e8 = substr($spbcda25, 0, $spd8e1fc + 1) . strtr(substr($spbcda25, $spd8e1fc + 1), '_', DIRECTORY_SEPARATOR); } else { $sp3e09e8 = strtr($spbd0159, '_', DIRECTORY_SEPARATOR) . $spae86ff; } if (isset($this->prefixesPsr0[$sp94ea74])) { foreach ($this->prefixesPsr0[$sp94ea74] as $sp754d6b => $sp503bf4) { if (0 === strpos($spbd0159, $sp754d6b)) { foreach ($sp503bf4 as $sp7bc751) { if (file_exists($spc15032 = $sp7bc751 . DIRECTORY_SEPARATOR . $sp3e09e8)) { return $spc15032; } } } } } foreach ($this->fallbackDirsPsr0 as $sp7bc751) { if (file_exists($spc15032 = $sp7bc751 . DIRECTORY_SEPARATOR . $sp3e09e8)) { return $spc15032; } } if ($this->useIncludePath && ($spc15032 = stream_resolve_include_path($sp3e09e8))) { return $spc15032; } } } function includeFile($spc15032) { include $spc15032; }